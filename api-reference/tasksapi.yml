openapi: "3.0.0"
info:
  version: 1.0.0
  title: Tasks Tracking App
  description: A simple sample API for testing purposes.
  contact:
    name: Minae Lee
    url: https://github.com/minaelee
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
tags:
  - name: task
    description: Working with a single task
  - name: tasks 
    description: Working with multiple tasks
paths:
  /task:
    post:
      tags:
        - task
      description: Create a new task
      operationId: addTask
      requestBody:
        description: Task to add to the list
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /task/{id}:
    get:
      tags:
        - task
      description: Return a task based on its ID
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          description: ID of task to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - task
      description: Delete a task based on ID supplied in path
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: ID of task to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks:
    get:
      tags:
        - tasks
      description: |
        Return all tasks in an array
      operationId: getTasks
      parameters:
        - name: limit
          in: query
          description: Set maximum number of results
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - tasks
      description: Delete all tasks
      operationId: deleteTasks
      parameters:
        - name: limit
          in: query
          description: Set maximum number to delete
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Tasks deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Task:
      allOf:
        - $ref: '#/components/schemas/NewTask'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64
    NewTask:
      type: object
      required:
        - name  
      properties:
        name:
          type: string
        tag:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string